#textdomain wesnoth-NX-RPG

# wmllint: no translatables

#define VARIABLE_L VAR_ID NF_RVALUE
    {VARIABLE_OP {VAR_ID} literal {NF_RVALUE} }
#enddef
#define TIMESTAMP_TO_VARIABLE VAR_ID
    {VARIABLE_OP {VAR_ID} time stamp }
#enddef
#define VARIABLE_CONCATENATE VAR_ID RVALUE
    {VARIABLE {VAR_ID} "${VAR_ID}|{RVALUE}"}
#enddef
#define VARIABLE_FROM_STRLEN VAR_ID RVALUE
    {VARIABLE_OP {VAR_ID} string_length {RVALUE} }
#enddef
#define VARIABLE_RANDOM VAR_ID RVALUE
    {VARIABLE_OP ({VAR_ID}) rand ({RVALUE}) }
#enddef

# short aliases
#define VARIABLE_CAT VAR_ID RVALUE
    {VARIABLE_CONCATENATE {VAR_ID} {RVALUE} }
#enddef
#define VARIABLE_RAND VAR_ID RVALUE
    {VARIABLE_RANDOM {VAR_ID} {RVALUE} }
#enddef

#define VARIABLE_LEXICAL_EQUALS VAR_ID RVALUE
    [variable]
        name={VAR_ID}
        equals={RVALUE}
    [/variable]
#enddef

#define VARIABLE_LEXICAL_NOT_EQUALS VAR_ID RVALUE
    [variable]
        name={VAR_ID}
        not_equals={RVALUE}
    [/variable]
#enddef

# Requires Wesnoth 1.3.10
#define VARIABLE_LEXICAL_CONTAINS VAR_ID RVALUE
    [variable]
        name={VAR_ID}
        contains={RVALUE}
    [/variable]
#enddef

# Requires Wesnoth 1.3.2
#define VARIABLE_BOOLEAN_EQUALS VAR_ID RVALUE
    [variable]
        name={VAR_ID}
        boolean_equals={RVALUE}
    [/variable]
#enddef

# Requires Wesnoth 1.5.0+svn
#define VARIABLE_BOOLEAN_NOT_EQUALS VAR_ID RVALUE
    [variable]
        name={VAR_ID}
        boolean_not_equals={RVALUE}
    [/variable]
#enddef

#define STRING_LENGTH_TO_VARIABLE VAR_ID RVALUE
    {VARIABLE_OP {VAR_ID} string_length {RVALUE} }
#enddef

# ********************** NUMERICAL COMPARISONS **********************

# ( l_value == r_value )
#define VARIABLE_NUMERICAL_EQUALS VAR_ID RVALUE
    [variable]
        name={VAR_ID}
        numerical_equals={RVALUE}
    [/variable]
#enddef

# ( l_value != r_value )
#define VARIABLE_NUMERICAL_NOT_EQUALS VAR_ID RVALUE
    [variable]
        name={VAR_ID}
        numerical_not_equals={RVALUE}
    [/variable]
#enddef

# ( l_value < r_value )
#define VARIABLE_NUMERICAL_LESS_THAN VAR_ID RVALUE
    [variable]
        name={VAR_ID}
        less_than={RVALUE}
    [/variable]
#enddef

# ( l_value > r_value )
#define VARIABLE_NUMERICAL_GREATER_THAN VAR_ID RVALUE
    [variable]
        name={VAR_ID}
        greater_than={RVALUE}
    [/variable]
#enddef

# ( l_value <= r_value )
#define VARIABLE_NUMERICAL_LESS_THAN_OR_EQUAL VAR_ID RVALUE
    [variable]
        name={VAR_ID}
        less_than_equal_to={RVALUE}
    [/variable]
#enddef

# ( l_value >= r_value )
#define VARIABLE_NUMERICAL_GREATER_THAN_OR_EQUAL VAR_ID RVALUE
    [variable]
        name={VAR_ID}
        greater_than_equal_to={RVALUE}
    [/variable]
#enddef

# ( l_value >= left_r_value && l_value <= right_r_value )
#define VARIABLE_NUMERICAL_IN_RANGE VAR_ID LEFT RIGHT
    [variable]
        name={VAR_ID}
        greater_than_equal_to={LEFT}
    [/variable]
    [variable]
        name={VAR_ID}
        less_than_equal_to={RIGHT}
    [/variable]
#enddef

# Generic, all-purpose var check macro
#define SXCON VAR OP VALUE
    [variable]
        name={VAR}
        {OP}={VALUE}
    [/variable]
#enddef
